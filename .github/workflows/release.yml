---
name: CI/CD

on:
  push:
    branches:
      - master
      - release/**

# default token permissions = none
permissions: { }

env:
  COMMON_PYTHON_VERSION: '3.11'

jobs:
  validate:
    uses: ./.github/workflows/validate.yml
    with:
      python-versions: '[ "3.11", "3.12", "3.13" ]'
    permissions: { }
    secrets: { }


  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: release
    needs: validate
    if: ${{ needs.validate.outputs.new-release-detected == 'true' }}

    permissions:
      contents: write

    env:
      GITHUB_ACTIONS_AUTHOR_NAME: github-actions
      GITHUB_ACTIONS_AUTHOR_EMAIL: actions@users.noreply.github.com

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.VERSION_BUMPER_APPID }}
          private-key: ${{ secrets.VERSION_BUMPER_SECRET }}

      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }}

      - name: Setup | Download Build Artifacts
        uses: actions/download-artifact@v4
        id: artifact-download
        with:
          name: ${{ needs.validate.outputs.distribution-artifacts }}
          path: dist

      - name: Release | Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.15.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Release | Add distribution artifacts to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.15.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Release | Update Minor Release Tag Reference
        if: steps.release.outputs.released == 'true' && steps.release.outputs.is_prerelease == 'false'
        env:
          FULL_VERSION_TAG: ${{ steps.release.outputs.tag }}
          GIT_COMMITTER_NAME: ${{ env.GITHUB_ACTIONS_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.GITHUB_ACTIONS_AUTHOR_EMAIL }}
        run: |
          MINOR_VERSION_TAG="$(echo "$FULL_VERSION_TAG" | cut -d. -f1,2)"
          git tag --force --annotate "$MINOR_VERSION_TAG" "${FULL_VERSION_TAG}^{}" -m "$MINOR_VERSION_TAG"
          git push -u origin "$MINOR_VERSION_TAG" --force

      - name: Release | Update Major Release Tag Reference
        if: steps.release.outputs.released == 'true' && steps.release.outputs.is_prerelease == 'false'
        env:
          FULL_VERSION_TAG: ${{ steps.release.outputs.tag }}
          GIT_COMMITTER_NAME: ${{ env.GITHUB_ACTIONS_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.GITHUB_ACTIONS_AUTHOR_EMAIL }}
        run: |
          MAJOR_VERSION_TAG="$(echo "$FULL_VERSION_TAG" | cut -d. -f1)"
          git tag --force --annotate "$MAJOR_VERSION_TAG" "${FULL_VERSION_TAG}^{}" -m "$MAJOR_VERSION_TAG"
          git push -u origin "$MAJOR_VERSION_TAG" --force

    outputs:
      released: ${{ steps.release.outputs.released }}
      tag: ${{ steps.release.outputs.tag }}


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.released == 'true' && github.repository == 'waku-py/waku' }}
    needs:
      - validate
      - release

    environment:
      name: pypi
      url: https://pypi.org/p/waku/

    permissions:
      id-token: write  # needed for PyPI upload

    steps:
      # Note: we need to checkout the repository at the workflow sha in case during the workflow
      # the branch was updated. To keep PSR working with the configured release branches,
      # we force a checkout of the desired release branch but at the workflow sha HEAD.
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.sha }}

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }}

      - name: Setup | Download Build Artifacts
        uses: actions/download-artifact@v4
        id: artifact-download
        with:
          name: ${{ needs.validate.outputs.distribution-artifacts }}
          path: dist

      # see https://docs.pypi.org/trusted-publishers/
      - name: Publish package distributions to PyPI
        id: pypi-publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
